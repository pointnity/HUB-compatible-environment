#/bin/bash

CPPFILES=`find . -type f -name '*.cpp'`
HFILES=`find . -type f -name '*.h'`
MMFILES=`find . -type f -name '*.mm'`

for FILE in $HFILES
do
    echo "Expanding $FILE..."
    expand -t 4 $FILE > ${FILE}_
    rm -v $FILE
    mv -v ${FILE}_ $FILE
done
for FILE in $CPPFILES
do
    echo "Expanding $FILE..."
    expand -t 4 $FILE > ${FILE}_
    rm -v $FILE
    mv -v ${FILE}_ $FILE
done
for FILE in $MMFILES
do
    echo "Expanding $FILE..."
    expand -t 4 $FILE > ${FILE}_
    rm -v $FILE
    mv -v ${FILE}_ $FILE
done
    test('prototypeFromSeed', function(t) {
        t.plan(3)
        
        var masterPrivateKeychainString = 'xprv9s21ZrQH143K4VRgygdbT9byKkWYJ5R73kNvFePJ7Hh7gA1Jic4NV4AnZmYs3fftKRdzMCHEaUFuYg7aApu99RDj9ZfA6KRXniK6r3VYRPV'
        masterPrivateKeychain = new PrivateKeychain(masterPrivateKeychainString)
        t.ok(masterPrivateKeychain, 'master private keychain created')
        t.equal(masterPrivateKeychain.toString(), masterPrivateKeychainString, 'master keychain string equal to reference value')
        t.ok(masterPrivateKeychain.hdKeychain instanceof HDPrivateKey, 'master keychain is an HDPrivateKey')
    })

    test('prototypeWithoutSeed', function(t) {
        t.plan(2)

        masterPrivateKeychain = new PrivateKeychain()
        t.ok(masterPrivateKeychain, 'master private keychain created')
        t.ok(masterPrivateKeychain.hdKeychain instanceof HDPrivateKey, 'master keychain is an HDPrivateKey')
    })
